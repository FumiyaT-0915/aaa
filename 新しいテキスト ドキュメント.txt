Sub MultipleRegressionAnalysis01()
    ' サンプルデータの定義
'    Dim temperature As Variant
'    Dim humidity As Variant
'    Dim weather As Variant
'    Dim windSpeed As Variant
'    Dim trafficVolume As Variant
'
'    temperature = Array(30, 25, 28, 22, 31, 27, 26, 29, 24, 23)
'    humidity = Array(70, 65, 75, 60, 80, 68, 72, 74, 66, 64)
'    weather = Array(1, 0, 1, 0, 1, 1, 0, 1, 0, 0) ' 1: 晴れ, 0: 雨
'    windSpeed = Array(5, 3, 4, 2, 6, 4, 3, 5, 2, 3)
'    trafficVolume = Array(200, 180, 190, 170, 210, 195, 185, 205, 175, 165)

    
    ' 結果シートの存在を確認し、存在する場合は削除
    Dim rws As Worksheet
    On Error Resume Next
    Set rws = ThisWorkbook.Sheets("RegressionResult")
    If Not rws Is Nothing Then
        Application.DisplayAlerts = False
        rws.Delete
        Application.DisplayAlerts = True
    End If
    On Error GoTo 0
    
    Dim rNewSheet As Worksheet
    ' シートの最後に新しいシートを追加
    Set rNewSheet = Worksheets.Add(After:=Worksheets(Worksheets.Count))
    ' シート名を変更
    rNewSheet.Name = "RegressionResult"
    
    Set rws = ThisWorkbook.Sheets("RegressionResult")
    

    Dim btn As Button
    Dim macroName As String
    
    ' マクロ名を指定
    macroName = "MultipleRegressionAnalysis01"
    
    ' ボタンを作成
    Set btn = rws.Buttons.Add(150, 60, 100, 30) ' (左, 上, 幅, 高さ)
    btn.Caption = "分析開始"
    
    ' ボタンにマクロを割り当て
    btn.OnAction = macroName
    
    
    ' でーたシートの存在を確認し、存在しない場合は新たに作成
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets("RegressionData")
    
'    If Not ws Is Nothing Then
'        Application.DisplayAlerts = False
'        ws.Delete
'        Application.DisplayAlerts = True
'    End If
'    On Error GoTo 0
'
'    Dim NewSheet As Worksheet
'    ' シートの最後に新しいシートを追加
'    Set NewSheet = Worksheets.Add(After:=Worksheets(Worksheets.Count))
'    ' シート名を変更
'    NewSheet.Name = "RegressionData"
    
    ThisWorkbook.Worksheets("RegressionData").Activate
    
    Set ws = ThisWorkbook.Sheets("RegressionData")
    
    ' データをシートに書き込む
'    ws.Range("A1:E1").Value = Array("TrafficVolume", "Temperature", "Humidity", "Weather", "WindSpeed")
'    ws.Range("A2:A11").Value = Application.Transpose(trafficVolume)
'    ws.Range("B2:B11").Value = Application.Transpose(temperature)
'    ws.Range("C2:C11").Value = Application.Transpose(humidity)
'    ws.Range("D2:D11").Value = Application.Transpose(weather)
'    ws.Range("E2:E11").Value = Application.Transpose(windSpeed)
    
    Dim lastRow As Long
    Dim lastCol As Long
    Dim dataRange As Range
    Dim mokutekiRange As Range
    
    ' 最終行を取得
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    
    ' 最終列を取得
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
    
    ' 動的な範囲を選択
    Set dataRange = ws.Range(ws.Cells(1, 2), ws.Cells(lastRow, lastCol))
    Set mokutekiRange = ws.Range(ws.Cells(1, 1), ws.Cells(lastRow, 1))
    
'    Set dataRange = ws.Range(ws.Cells(1, 2), ws.Cells(11, 5))
'    Set mokutekiRange = ws.Range(ws.Cells(1, 1), ws.Cells(1, 11))
'
'    ws.Range(ws.Cells(1, 2), ws.Cells(11, 5)).Select
'    ws.Range(ws.Cells(1, 1), ws.Cells(11, 1)).Select
'    ws.Range("E1:E11").Select
'    ws.Range("A1:D11").Select

    
    ' データの最後の行の三行下に結果を出力
    Dim outputCell As Range
    Set outputCell = ThisWorkbook.Sheets("RegressionResult").Range("A1")
    
    ' 分析ツールを使用して重回帰分析を実行
    Application.Run "ATPVBAEN.XLAM!Regress", mokutekiRange, dataRange, True, True, , outputCell, True, True, True, True
    
    ' グラフを作成
    Dim chartObj As ChartObject
    Set chartObj = rws.ChartObjects.Add(Left:=300, Width:=400, Top:=10, Height:=300)
    With chartObj.Chart
        .SetSourceData Source:=dataRange ' 正しいデータ範囲を指定
        .ChartType = xlXYScatterLines ' 散布図（線あり）
        .HasTitle = True
        .ChartTitle.Text = "重回帰分析結果"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "説明変数"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "目的変数"
    End With
    
    ' 実測値と予測値の差を示すグラフを作成
    Dim kekkaRange As Range
    lastRow = rws.Cells(rws.Rows.Count, 1).End(xlUp).Row
    Set kekkaRange = rws.Range(rws.Cells(16 + 6 + lastCol, 2), rws.Cells(lastRow, 2))
    
    Dim hikaku_mokutekiRange As Range
    Set hikaku_mokutekiRange = rws.Range(rws.Cells(16 + 6 + lastCol, 5), rws.Cells(lastRow, 5))
    hikaku_mokutekiRange.Value = mokutekiRange.Value
    
    Set chartObj = rws.ChartObjects.Add(Left:=300, Width:=400, Top:=320, Height:=300)

    With chartObj.Chart
        .SetSourceData Source:=Union(kekkaRange, hikaku_mokutekiRange) ' 実測値と予測値の範囲を指定
        .ChartType = xlLineMarkers ' 折れ線グラフ（マーカー付き）
        .HasTitle = True
        .ChartTitle.Text = "実測値と予測値の比較"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "データポイント"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "交通量"
    End With
    
    ' 差分を示すグラフを作成
    Set chartObj = rws.ChartObjects.Add(Left:=300, Width:=400, Top:=630, Height:=300)
    With chartObj.Chart
        .SetSourceData Source:=rws.Range(rws.Cells(16 + 6 + lastCol, 3), rws.Cells(lastRow, 3)) ' 差分の範囲を指定
        .ChartType = xlColumnClustered ' クラスタ化された縦棒グラフ
        .HasTitle = True
        .ChartTitle.Text = "実測値と予測値の差分"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "データポイント"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "差分"
    End With
End Sub

Sub execute()
    Call MultipleRegressionAnalysis01
End Sub
